---
import contentful from "@lib/contentful";
import { type TypePageSkeleton } from "@lib/generated/contentful/index";
import type { Entry } from "@lib/types";
import type { AstroComponentFactory } from "astro/runtime/server/index.js";

const layouts = import.meta.glob("../layouts/*.astro");

export async function getStaticPaths() {
  const pages = await contentful.getEntries<TypePageSkeleton>({
    content_type: "page",
    include: 10, // max include depth
  });

  return pages.items.map((page) => {
    return {
      params: { slug: page.fields.slug == "/" ? undefined : page.fields.slug },
      props: {
        page: page,
      },
    };
  });
}

const getLayout = async (page: Entry<TypePageSkeleton>): Promise<AstroComponentFactory> => {
  try {
    return (await layouts[`../layouts/${page.fields.layout}.astro`]() as any).default;
  } catch (error) {
    console.error(error);
    console.log("Layout [" + page.fields.layout + " not found.");
    console.log("Defaulting to standard layout for page: " + page.fields.slug);
    return (await layouts["../layouts/StandardLayout.astro"]() as any).default;
  }
};

const { page } = Astro.props;
const Layout = await getLayout(page);
---

<Layout {...page} />
